// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "abduselam-arabianmejlis/domain"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ForgetPWUsecase is an autogenerated mock type for the ForgetPWUsecase type
type ForgetPWUsecase struct {
	mock.Mock
}

// ForgetPW provides a mock function with given fields: c, email, server_address
func (_m *ForgetPWUsecase) ForgetPW(c context.Context, email string, server_address string) error {
	ret := _m.Called(c, email, server_address)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(c, email, server_address)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GenerateRecoveryLink provides a mock function with given fields: server_address, email, recoveryToken
func (_m *ForgetPWUsecase) GenerateRecoveryLink(server_address string, email string, recoveryToken string) string {
	ret := _m.Called(server_address, email, recoveryToken)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string, string) string); ok {
		r0 = rf(server_address, email, recoveryToken)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ResetPW provides a mock function with given fields: c, request
func (_m *ForgetPWUsecase) ResetPW(c context.Context, request domain.ResetPWRequest) error {
	ret := _m.Called(c, request)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.ResetPWRequest) error); ok {
		r0 = rf(c, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyForgetPWRequest provides a mock function with given fields: c, email, recover_token
func (_m *ForgetPWUsecase) VerifyForgetPWRequest(c context.Context, email string, recover_token string) error {
	ret := _m.Called(c, email, recover_token)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(c, email, recover_token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewForgetPWUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewForgetPWUsecase creates a new instance of ForgetPWUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewForgetPWUsecase(t mockConstructorTestingTNewForgetPWUsecase) *ForgetPWUsecase {
	mock := &ForgetPWUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
